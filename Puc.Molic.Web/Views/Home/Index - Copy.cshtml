@using Puc.Molic.Model
@model FlowModel


<style type="text/css">
    .circle {
        border-radius: 50%;
        width: 50px;
        height: 50px;
        background: black;
        margin-top: 4px;
    }

    .square {
        width: 50px;
        height: 50px;
        background: black;
        margin-top: 4px;
    }

    .scene {
        width: 240px;
        max-height: 400px;
        margin-top: 5px;
        border: 2px solid #000;
        background-color: #ffffff;
        border-radius: 20px;
    }

    .mainbody,
    .header,
    .footer {
        padding: 5px;
    }

    .mainbody {
        margin-top: 0;
        max-height: 388px;
        overflow: auto;
    }

    .header {
        height: 40px;
        border-bottom: 1px solid #000;
        height: 40px;
    }

    .footer {
        height: 40px;
        background-color: whiteSmoke;
        border-top: 1px solid #DDD;
        -webkit-border-bottom-left-radius: 5px;
        -webkit-border-bottom-right-radius: 5px;
        -moz-border-radius-bottomleft: 5px;
        -moz-border-radius-bottomright: 5px;
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    i.arrow-down {
        color: #000;
        width: 0.2em;
        height: 6em;
        display: inline-block;
        position: relative;
        background: #000;
        vertical-align: top;
    }

        i.arrow-down:after {
            border-right: 0.3em solid transparent;
            border-left: 0.3em solid transparent;
            border-top: 0.7em solid currentColor;
            position: absolute;
            content: "";
            bottom: -0.2em;
            left: -0.19em;
        }

    i.arrow-down-dashed {
        color: #000;
        width: 0.2em;
        height: 6em;
        display: inline-block;
        position: relative;
        background: repeating-linear-gradient( 0deg, #000, #000 10px, #FFF 10px, #FFF 20px );
        vertical-align: top;
    }

        i.arrow-down-dashed:after {
            border-right: 0.3em solid transparent;
            border-left: 0.3em solid transparent;
            border-top: 0.7em solid currentColor;
            position: absolute;
            content: "";
            bottom: -0.2em;
            left: -0.19em;
        }

    .topicChange {
        background: #CFCFCF;
    }
</style>




<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" rel="stylesheet" />


<form method="post" action="/Home/Index">
    <div class="form-group">
        <label for="exampleInputEmail1">Elemento inicial</label>
        <select name="ElementoInicial" class="form-select" aria-label="Default select example">
            <option selected>Open this select menu</option>
            @foreach (Node node in Model.Diagram.Nodes)
            {
                <option value="@node.Id">@string.Format("{0} - {1} - {2} - {3}", node.Id, node.Type, node.Topic, node.Comment)</option>
            }

        </select>

    </div>
    <div class="form-group">
        <label for="exampleInputPassword1">Elemento Final</label>
        <select name="ElementoFinal" class="form-select" aria-label="Default select example">
            <option selected>Open this select menu</option>
            @foreach (Node node in Model.Diagram.Nodes)
            {
                <option value="@node.Id">@string.Format("{0} - {1} - {2} - {3}", node.Id, node.Type, node.Topic, node.Comment)</option>
            }
        </select>

    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Obter caminhos</button>
    </div>


</form>

<br />















<div class="form-group subdiagram">
    <center>


        <div>
            <div class='row'>
                <div class='col-md-12' style='margin-top: 50px;'>
                    <ul class='nav nav-pills'>
                        @{
                            string active = "active";
                        }
                        @foreach (Diagram subDiagram in Model.DiagramPaths)
                        {
                            <li class='@active'><a data-toggle='tab' href='#caminho_@subDiagram.Id'>@string.Format("Caminho #{0} ({1})", subDiagram.Id, subDiagram.Name)</a></li>
                            active = string.Empty;
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="tab-content">

            @{
                active = "active";
            }
            @foreach (Diagram subDiagram in Model.DiagramPaths)
            {
                
                Node previousNode = null;

                <div id='caminho_@subDiagram.Id' class='tab-pane fade in @active'>
                    <div class='row'>
                        <center>

                            @{
                                active = string.Empty;
                                foreach (Node node in subDiagram.Nodes)
                                {

                                    if (previousNode != null)
                                    {

                                        Edge edge = subDiagram.Edges.Where(x => x.SourceId == previousNode.Id && x.TargetId == node.Id).FirstOrDefault();

                                        switch (edge.Type)
                                        {
                                            case Consts.ElementType.BreakdownRecovery:
                                                <i class='arrow-down-dashed'> <br><br>&nbsp;&nbsp;Test 1</i>
                                                break;
                                            case Consts.ElementType.TurnGiving:
                                                <i class="arrow-down"> <br><br>&nbsp;&nbsp;Test</i>
                                                break;
                                        }
                                    }
                                    previousNode = node;

                                    switch (node.Type)
                                    {
                                        case Consts.ElementType.Opening:
                                            <div class="circle"></div>
                                            break;
                                        case Consts.ElementType.SystemProcess:
                                            <div class="square"></div>
                                            break;
                                        case Consts.ElementType.Scene:
                                            <div class="scene">
                                                <div class="header">@node.Topic</div>
                                                <div class="mainbody">
                                                    <p>@node.Comment</p>
                                                </div>
                                            </div>
                                            break;
                                        case Consts.ElementType.TopicChange:
                                            <div class="scene topicChange">
                                                <div class="mainbody">
                                                    <p>@node.Comment</p>
                                                </div>
                                            </div>
                                            break;
                                    }


                                }
                            }


                        </center>
                    </div>
                </div>
            }



        </div>




    </center>




    @*
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <div class='col-md-12'>
        <div class='row'>
        <div class='col-md-12' style='margin-top: -50px;'>
        <ul class='nav nav-pills'>
        <li class='active'>
        <a data-toggle='tab' href='#vis_opgave1'>Vis opgave</a>

        </li>
        <li>
        <a data-toggle='tab' href='#rediger_opgave1'>Rediger Tekst</a>

        </li>
        <li>
        <a data-toggle='tab' href='#admin_opgave_billeder1'>Administrer billeder</a>

        </li>
        </ul>
        </div>
        </div>
        </div>



        <div class="tab-content">
        <div id='vis_opgave1' class='tab-pane fade in active'>
        <div class='row'>aaaaaaaa11111111111</div>
        </div>
        <div id='rediger_opgave1' class='tab-pane fade'>
        <div class='row'>bbbbbbb11111111</div>
        </div>
        <div id='admin_opgave_billeder1' class='tab-pane fade'>
        <div class='row'>cccccccccc1111111</div>
        </div>
        </div>
        <p>&nbsp;</p>
        <p>&nbsp;</p>

    *@





</div>
